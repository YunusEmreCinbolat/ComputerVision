# -*- coding: utf-8 -*-
"""pyplot_tutorial.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k7n97-XqsLPP4u5qiSTNEciaRwTXdpY3

# Plotting
"""

# Commented out IPython magic to ensure Python compatibility.
# %pylab inline
pylab.rcParams['figure.figsize'] = (10, 6)

from matplotlib import pyplot as plt
import numpy as np
import numpy.random as rand

"""## Line plots"""

x = [1, 2]
y = [1, 2]
plt.title('Plotting these values')
plt.xlabel('x axis')
plt.ylabel('y axis')
plt.plot(x, y, label='x and y')
plt.plot(x, [3, 4], 'r--', label='other')
plt.legend()
plt.show()

"""## Scatter plots"""

# Generate data
mu1, mu2 = 2, 5
std = 1
sample1 = rand.normal(mu1, std, 50)
sample2 = rand.normal(mu2, std, 50)

# Plot centers
fig = plt.gcf()
fig.gca().add_artist(plt.Circle((mu1,mu1), radius=std, color='b', fill=False))
fig.gca().add_artist(plt.Circle((mu2,mu2), radius=std, color='g', fill=False))

# Plot point scatter
plt.plot(sample1[:25], sample1[25:], 'b*')
plt.plot(sample2[:25], sample2[25:], 'gD')

"""## Plotting over images"""

from skimage import data
from skimage import io

astronaut = data.astronaut()
plt.figure(1)
plt.axis('off')
plt.imshow(astronaut)
corners = np.array([
    [150, 10],
    [150, 180],
    [300, 180],
    [300, 10],
    [150, 10]
])
plt.plot(corners[:, 0], corners[:, 1], 'b')

"""## Updating Images"""

coffee = data.coffee()
coffee[100:200,300:400] = 0
plt.imshow(coffee)

"""## Subplots"""

# Simple data to display in various forms
x = np.linspace(0, 2 * np.pi, 400)
y = np.sin(x ** 2)


# Four axes, returned as a 2-d array
f, axarr = plt.subplots(2, 2)
axarr[0, 0].plot(x, y)
axarr[0, 0].set_title('Axis [0,0]')
axarr[0, 1].scatter(x, y)
axarr[0, 1].set_title('Axis [0,1]')
axarr[1, 0].plot(x, y ** 2)
axarr[1, 0].set_title('Axis [1,0]')
axarr[1, 1].scatter(x, y ** 2)
axarr[1, 1].set_title('Axis [1,1]')
# Fine-tune figure; hide x ticks for top plots and y ticks for right plots
plt.setp([a.get_xticklabels() for a in axarr[0, :]], visible=False)
plt.setp([a.get_yticklabels() for a in axarr[:, 1]], visible=False)
plt.show()

